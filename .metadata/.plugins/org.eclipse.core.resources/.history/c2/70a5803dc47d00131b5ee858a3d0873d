package org.ics.llc.compile;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;

public class PythonCompile {
	public void change()
	{
		File file=new File("parsed-data/QuestionsCodeIndex.txt");
		String line=new String();
		try
		{
			BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(file)));
			BufferedWriter writer01 = new BufferedWriter(new OutputStreamWriter(new FileOutputStream("Python/PythonOutputInformation1.txt")));
			BufferedWriter writer02 = new BufferedWriter(new OutputStreamWriter(new FileOutputStream("Python/PythonOutputInformation2.txt")));
			BufferedWriter writer03 = new BufferedWriter(new OutputStreamWriter(new FileOutputStream("Python/PythonOutputInformation3.txt")));
			BufferedWriter writer04 = new BufferedWriter(new OutputStreamWriter(new FileOutputStream("Python/PythonOutputInformation4.txt")));
			PrintWriter writer2 = new PrintWriter("PythonResult.txt");
			while((line=reader.readLine()) != null)
			{
				int temp = Integer.parseInt(line);
				int m = temp / 100000 + 1;
				File codefile = new File("parsed-data/Code/"+m+"/QuestionsCode_"+temp+".txt");
				File targetFile = new File("Python/FileTemp.py");
				if(targetFile.exists())
					targetFile.delete();
				copyFile(codefile, targetFile);
				//codefile.renameTo(new File("FileTemp.java"));
				String result = compile("Python/FileTemp.py");
				if(result != null)
				{
					//System.out.println(result);
					writer.write("QuestionsCode_"+temp+".txt");
					writer.write("\n");
					writer.write(result);
					writer.write("\n");
				}
				
			}
			reader.close();
			writer01.close();
			writer02.close();
			writer03.close();
			writer04.close();
			writer2.close();
			System.out.println("file over!");
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void copyFile(File oldFile, File newFile)
	{
		try {
			if(oldFile.exists())
			{
				BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(oldFile)));
				BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(newFile)));
				String lineString;
				while((lineString = reader.readLine()) != null)
				{
					writer.write(lineString);
					writer.write('\n');
				}
				reader.close();
				writer.close();
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public String compile(String s)
	{
		try {			
			Process shell = Runtime.getRuntime().exec("cmd.exe /c C:\\Python27\\python.exe "+s);
			final InputStream error = shell.getErrorStream();
			String outResult = "output:\n";
			String errorResult = "error:\n";
			
			BufferedReader bReader = new BufferedReader(new InputStreamReader(error));
			String line;
			try {
				while((line = bReader.readLine()) != null)
				{
					errorResult += line;
					errorResult += "\n";
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
			shell.destroy();
			return outResult + errorResult;
//			Thread response = new Thread(){
//				public void run()
//				{
//					
//				}
//			};
//			Thread response2 = new Thread(){
//				public void run()
//				{
//					int c = -1;
//					byte[] buf = new byte[5120];
//					
//				}
//			};
//			response.start();
//			response2.start();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return null;
	}
	
	public static void main(String[] args)
	{
		PythonCompile pc = new PythonCompile();
		pc.change();
	}
}
